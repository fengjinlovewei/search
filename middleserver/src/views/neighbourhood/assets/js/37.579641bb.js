(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{304:function(t,e,s){"use strict";s.r(e);var a=s(14),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"typescript-使用指南"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typescript-使用指南"}},[t._v("#")]),t._v(" Typescript 使用指南")]),t._v(" "),e("h4",{attrs:{id:"说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#说明"}},[t._v("#")]),t._v(" 说明")]),t._v(" "),e("ol",[e("li",[t._v("本次升级同时支持 js 和 ts,开发时会在编译阶段对当前启动目录（如果有 ts 文件）则会进行静态类型检查")]),t._v(" "),e("li",[t._v("同时 eslint\b 也会进行代码风格规范，vscodo 安装插件 ESLint, Prettier")]),t._v(" "),e("li",[t._v("配置文件为 ts.config.json,新增目录或者 alias 无法解析时，需要在里面配置")]),t._v(" "),e("li",[t._v("example 文件为 ts+hooks 开发，如需新增其他 demo 文件可在 example 中配置")])]),t._v(" "),e("h4",{attrs:{id:"目录结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[t._v("#")]),t._v(" 目录结构")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("├── global"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("d"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ts\n├── jsconfig"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json\n├── "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json\n├── packages\n│   ├── "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("README")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("md\n│   ├── example\n│   │   ├── pages\n│   │   │   └── demo\n│   │   │       ├── index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tsx\n│   │   │       └── types\n│   │   │           └── index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ts\n│   │   └── shared\n│   └── shared\n│       ├── types                         "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ts类型相关")]),t._v("\n│       │   ├── index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ts\n│       │   └── userInfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ts               "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用户类型（需完善）")]),t._v("\n├── scripts\n├── tsconfig"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json\n├── ws"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n")])])]),e("h4",{attrs:{id:"类型定义速查"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型定义速查"}},[t._v("#")]),t._v(" 类型定义速查")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("React.FC"),e("Props",[t._v(" | React.FunctionComponent"),e("Props",[t._v(" 函数组件类型")])],1)],1)]),t._v(" "),e("li",[e("p",[t._v("React.Component<Props, State> class 组件类型")])]),t._v(" "),e("li",[e("p",[t._v("React.ComponentType"),e("Props",[t._v(" 表示 (React.FC | React.Component) 集合的类型 - 用于 HOC")])],1)]),t._v(" "),e("li",[e("p",[t._v("React.ComponentProps"),e("typeof",{attrs:{XXX:""}},[t._v("\n取得组件 XXX 的 Props 类型（警告：无法用于静态声明的 default props 以及泛型 props）")])],1)]),t._v(" "),e("li",[e("p",[t._v("React.ReactElement | JSX.Element\n表示 React 中 Element 概念的类型 - 表示一个原生 DOM 组件（比如 ")]),e("div"),t._v("）或用户自定义的复合组件 （比如 "),e("MyComponent"),t._v("）"),e("p")],1),t._v(" "),e("li",[e("p",[t._v("React.ReactNode\n表示任意类型的 React 节点（相当于 ReactElement (包括 Fragments 和 Portals) + 原始 JS 类型）")])]),t._v(" "),e("li",[e("p",[t._v("React.CSSProperties 表示 JSX 中样式对象的类型")])]),t._v(" "),e("li",[e("p",[t._v("React.HTMLProps"),e("HTMLXXXElement",[t._v("\n表示指定 HTML 元素的类型 - 用于扩展 HTML 元素")])],1)]),t._v(" "),e("li",[e("p",[t._v("React.ReactEventHandler"),e("HTMLXXXElement",[t._v("\n表示 event handler 的泛型类型 - 用于声明 event handlers")])],1)]),t._v(" "),e("li",[e("p",[t._v("React.XXXEvent"),e("HTMLXXXElement",[t._v("\n表示更多特殊 event。一些常见的 event 例如：ChangeEvent, FormEvent, FocusEvent, KeyboardEvent, MouseEvent, DragEvent, PointerEvent, WheelEvent, TouchEvent。")])],1)])]),t._v(" "),e("h2",{attrs:{id:"历史需求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#历史需求"}},[t._v("#")]),t._v(" 历史需求")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("需求地址")]),t._v(" "),e("th",[t._v("分支")]),t._v(" "),e("th",[t._v("时间")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("a",{attrs:{href:""}})]),t._v(" "),e("td",[e("a",{attrs:{href:"http://igit.58corp.com/wuxianfe/neighbourhood/-/merge_requests/729",target:"_blank",rel:"noopener noreferrer"}},[t._v("feature/ts-config-gq"),e("OutboundLink")],1)]),t._v(" "),e("td",[t._v("2021-03-26")])])])]),t._v(" "),e("h2",{attrs:{id:"静态埋点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#静态埋点"}},[t._v("#")]),t._v(" 静态埋点")])])}),[],!1,null,null,null);e.default=n.exports}}]);